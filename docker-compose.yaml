services:
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres_user
      - POSTGRES_DB=app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d app"]
      interval: 3s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./sample:/app
    working_dir: /app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_NAME=app

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./sample:/app
    working_dir: /app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A sample.celery_app worker --loglevel=info
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_HOST=postgres

volumes:
  postgres_data:
  redis_data: